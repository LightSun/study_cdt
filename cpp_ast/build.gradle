plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
//eclipse maven: https://mvnrepository.com/artifact/org.eclipse.platform
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
   // testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'junit:junit:4.13.2' //junit 4 'need setting -> gradle -> run test(idea)'

    //3.25.0: jdk 11+
    implementation 'org.eclipse.platform:org.eclipse.core.runtime:3.25.0'

    implementation 'org.eclipse.platform:org.eclipse.core.resources:3.17.0'
    implementation 'org.eclipse.platform:org.eclipse.core.variables:3.5.100'
    implementation 'org.eclipse.platform:org.eclipse.jface:3.26.0'
    implementation 'org.eclipse.platform:org.eclipse.jface.text:3.20.100'
    implementation 'org.eclipse.platform:org.eclipse.core.filebuffers:3.7.200'
    implementation 'org.eclipse.platform:org.eclipse.ltk.core.refactoring:3.12.200'
    // https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.ui
    implementation 'org.eclipse.platform:org.eclipse.ui:3.201.0'
    // https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.ui.ide
    implementation 'org.eclipse.platform:org.eclipse.ui.ide:3.19.0'

    // https://mvnrepository.com/artifact/com.github.mhoffrog.attached/org.eclipse.cdt.core
   // implementation 'com.github.mhoffrog.attached:org.eclipse.cdt.core:5.11.0'


    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.30.0'
    implementation 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.600'

   // implementation 'com.sun.jna:jna:3.0.9'
    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    implementation 'net.java.dev.jna:jna:5.12.1'

    implementation 'com.google.code.gson:gson:2.9.0'
}

test {
    useJUnitPlatform()
}
configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            def os = System.getProperty("os.name").toLowerCase()
            if (os.contains("windows")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:3.120.0")
            }
            else if (os.contains("linux")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:3.120.0")
            }
            else if (os.contains("mac")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:3.120.0")
            }
        }
    }
}